import {useEffect, useState} from 'preact/hooks';
import './app.css';

// function genPassword() {
//   let chars =
//     '0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ';
//   let passwordLength = 12;
//   let password = '';
//   for (var i = 0; i <= passwordLength; i++) {
//     var randomNumber = Math.floor(Math.random() * chars.length);
//     password += chars.substring(randomNumber, randomNumber + 1);
//   }
//   return password;
// }

// const obj = [...Array(67)].map((_, i) => ({
//   id: i + 1,
//   name: '',
//   password: genPassword(),
// }));

const users = [
  {id: 1, name: '–ê–¥–∞–º–µ–Ω–∫–æ –ù–∞–∑–∞—Ä', password: 'h9fL2IHY9ccdX'},
  {id: 2, name: '–ë–µ—Å—Å–æ–Ω–æ–≤–∞ –Æ–ª–∏—è', password: 'H5#Ncu^2b1sdV'},
  {id: 3, name: '–ë–æ–≥–¥–∞–Ω–æ–≤ –§–µ–¥–æ—Ä', password: 'GI5rfpL)5ncZB'},
  {id: 4, name: '–ë–æ–≥–¥–∞–Ω–æ–≤–∞ –ê–Ω–∞—Å—Ç–∞—Å–∏—è', password: 'H1VI!4sd*Ol3r'},
  {id: 5, name: '–ë–æ–∫–∞—Ä–µ–≤–∏—á –ú–∏—Ö–∞–∏–ª', password: 'rnGpTVU^m1XQr'},
  {id: 6, name: '–ë—É–π–Ω–µ–≤–∏—á –í–∏–∫—Ç–æ—Ä–∏—è', password: '@suOKYTRisf%1'},
  {id: 7, name: '–ë—É–π–Ω–µ–≤–∏—á –ò–ª—å—è', password: 'j!ceL2&qxux@R'},
  {id: 8, name: '–í–∞—Ä—Ñ–æ–ª–æ–º–µ–µ–≤–∞ –ê–ª–µ—Å—è', password: 'L7jkLpojj^aY0'},
  {id: 9, name: '–ì–∞–µ–≤ –°—Ç–∞—Å', password: '3EZ^hAD$zRc4Q'},
  {id: 10, name: '–ì–∞–ø–µ–µ–≤–∞ –¢–∏—Ö–æ–º–∏—Ä–∞', password: '%%($Wbw!)BsfU'},
  {id: 11, name: '–ì–æ–Ω—á–∞—Ä—É–∫ –ù–∏–∫–æ–ª–∞–π', password: '9c3hesK(uFqFV'},
  {id: 12, name: '–ì—Ä–∏—â–µ–Ω–∫–æ –ú–∞–∫—Å–∏–º', password: 'JsyUsRQS83JVG'},
  {id: 13, name: '–ì—É–ª–µ–≤–∏—á –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞', password: 'FJ5&TexeVphWo'},
  {id: 14, name: '–î–∞–≤–∏–¥–µ–Ω–∫–æ –î–∞—Ä—å—è', password: 'K0g6eYlGWQ&Qq'},
  {id: 15, name: '–î–∞—à–∫–æ–≤—Å–∫–∞—è –í–∞–ª–µ—Ä–∏—è', password: 'kfY)y5JH3vtA7'},
  {id: 16, name: '–î–∞—à–∫–æ–≤—Å–∫–∏–π –ê–Ω–¥—Ä–µ–π', password: 'vPSHKSK!ZpjKT'},
  {id: 17, name: '–î–∞—à–∫–æ–≤—Å–∫–∏–π –î–∞–Ω–∏–∏–ª', password: 'S1nf$%8w7@$3*'},
  {id: 18, name: '–î–∑—è–¥–æ–∫ –ú–∞—Ä–∏—è', password: '$dCkLDYUeFSda'},
  {id: 19, name: '–ï–≤—Ç—É—à–µ–Ω–∫–æ –ï–ª–∏–∑–∞–≤–µ—Ç–∞', password: 'Q2h1!P$aZSdMM'},
  {id: 20, name: '–ñ–µ–ª–µ–∑–Ω—è–∫ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', password: 'UU#c((7se5xuM'},
  {id: 21, name: '–ó–∞–π—Ü–µ–≤ –ò–ª—å—è', password: '8)qj!W2reP!IR'},
  {id: 22, name: '–ó–∞–π—Ü–µ–≤ –ú–∞–∫—Å–∏–º', password: 'v&cdnjTjhopcH'},
  {id: 23, name: '–ó–∞–∫ –ê–Ω–∞—Å—Ç–∞—Å–∏—è', password: '5*b*x6NFXriZb'},
  {id: 24, name: '–ö–∞–ª–∏–Ω–∏—á–µ–Ω–∫–æ –ò–æ—Å–∏—Ñ', password: 'Vqx1HfR)$P#4h'},
  {id: 25, name: '–ö–∞–º–∏–Ω—Å–∫–∏–π –°–µ—Ä–≥–µ–π', password: 'su&zCq%zH#jt!'},
  {id: 26, name: '–ö–æ–≤–≥—É–Ω–æ–≤ –ö–∏—Ä–∏–ª–ª', password: 'JzPmBQye)nqv7'},
  {id: 27, name: '–ö–æ–≤–≥—É–Ω–æ–≤ –¢–∏–º–æ—Ñ–µ–π', password: 'W9cBk4IE)oJYx'},
  {id: 28, name: '–ö–æ–≤–≥—É–Ω–æ–≤–∞ –ê–Ω–∞—Å—Ç–∞—Å–∏—è', password: 'L@u9@X27uiYNY'},
  {id: 29, name: '–ö–æ–≤–≥—É–Ω–æ–≤–∞ –ê–Ω–∞—Å—Ç–∞—Å–∏—è', password: 'Y4pE^G%TeQ(fa'},
  {id: 30, name: '–ö–æ–≤–≥—É–Ω–æ–≤–∞ –ö—Å–µ–Ω–∏—è', password: 'zfuvAEaj!4qso'},
  {id: 31, name: '–ö–æ–≤–≥—É–Ω–æ–≤–∞ –ù–∞–¥–µ–∂–¥–∞', password: 'V^^K2s1&)AsS)'},
  {id: 32, name: '–ö–æ–≤–≥—É–Ω–æ–≤–∞ –ù–∏–∫–æ–ª–∏—è', password: 'MTlas5FaUxSFw'},
  {id: 33, name: '–ö–æ—Ä—Ç–µ–ª–µ–≤–∞ –ê–Ω–≥–µ–ª–∏–Ω–∞', password: 'b^ADTkmaWi*)6'},
  {id: 34, name: '–ö–æ—Å—Ç—Ä–µ–Ω–∫–æ–≤–∞ –í–∏–∫—Ç–æ—Ä–∏—è', password: 'h0gx)w7I*gZB!'},
  {id: 35, name: '–ö—É–¥—Ä—è –î–∞—Ä—å—è', password: '!lDdv)IXTiqM5'},
  {id: 36, name: '–ö—É–¥—Ä—è –ú–∞—Ä–∏–Ω–∞', password: '8vw7j*!FM$UMN'},
  {id: 37, name: '–ö—É—Ä–∏–ª–∏–Ω –î–∞–Ω–∏–∏–ª', password: 'Qe&TJVzU*VFjG'},
  {id: 38, name: '–õ–∞–ø–∏—Ü–∫–∏–π –ò–ª—å—è', password: 'TzTWCC!vm7kKi'},
  {id: 39, name: '–õ–∞—à–∫–∏–Ω–∞ –°–æ—Ñ–∏—è', password: 'H9J!R!^(pezbQ'},
  {id: 40, name: '–õ—É–∫–æ–≤—Å–∫–∞—è –Ø—Ä–æ—Å–ª–∞–≤–∞', password: 'aQyqnEAxE#@Q#'},
  {id: 41, name: '–ú–∞—Ä–∏–Ω–æ–≤–∏—á –î–∞–≤–∏–¥', password: 'dCl(nVc5kT1rI'},
  {id: 42, name: '–ú–∞—Ö–Ω–∞—á –ö—Ä–∏—Å—Ç–∏–∞–Ω', password: 'j&&cQEBaTc#0m'},
  {id: 43, name: '–ú–∏—Å–æ—á–µ–Ω–∫–æ –Ø–Ω–∞', password: 'kK@$b*8rT4wxe'},
  {id: 44, name: '–ù–µ—Å—Ç–µ—Ä–æ–≤–∏—á –ú–∞–∫–∞—Ä', password: 'zNQjp10decz#F'},
  {id: 45, name: '–û—Å—Ç—Ä–∏—Ü–æ–≤–∞-–ê–Ω–∏—Å–∏–º–æ–≤–∞ –ê–Ω–Ω–∞', password: 'JrNqE#iJ$%NU!'},
  {id: 46, name: '–û—Å—Ç—Ä–æ–≥–ª—è–¥ –ú–∞—Ä—Ç–∞', password: '4xEn6on$7ezby'},
  {id: 47, name: '–ü–∏–ø—á–µ–Ω–∫–æ –ü—ë—Ç—Ä', password: '&2dx!oISlWF&1'},
  {id: 48, name: '–ü–æ—Å—Ç–æ–ª –ê–Ω–Ω–∞', password: ')3HY(GUbHsrX9'},
  {id: 49, name: '–†–æ–¥–Ω–µ–≤ –í–∏–∫—Ç–æ—Ä', password: 'yXy$%qHWt5bP!'},
  {id: 50, name: '–†–æ–¥–Ω–µ–≤ –õ–µ–≤', password: 'tw&icZG$hl0Pb'},
  {id: 51, name: '–†—è–∑–∞–Ω—Ü–µ–≤ –ê–Ω–¥—Ä–µ–π', password: 'Yzoy*xh7v$fGg'},
  {id: 52, name: '–†—è–∑–∞–Ω—Ü–µ–≤–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞', password: 'Yg79(d!07cu()'},
  {id: 53, name: '–°–∏–Ω–≥–∞–µ–≤—Å–∫–∏–π –ú–∏—Ö–∞–∏–ª', password: 'Clsh^#SnyUykc'},
  {id: 54, name: '–°–∫—Ä–∏–ø–∞—á–µ–≤–∞ –ú–∏–ª–∞–Ω–∞', password: 'JMnKP$r5zUSag'},
  {id: 55, name: '–°—Ç–µ–ø–∞–Ω–æ–≤—Å–∫–∞—è –ú–∞—Ä–∏–Ω–∞', password: 'cb3%vp$eG*hXM'},
  {id: 56, name: '–°—É–¥–∏–ª–æ–≤—Å–∫–∏–π –ë–æ–≥–¥–∞–Ω', password: 'Zy*n2)XZEgZ**'},
  {id: 57, name: '–¢–∏—Ç–æ–≤–∞ –î–∞—Ä—å—è', password: 'xK&G8HJuSYMn@'},
  {id: 58, name: '–£—Ä–∏—Ü–∫–∞—è –í–µ—Ä–æ–Ω–∏–∫–∞', password: '9mLxQny5zV*1S'},
  {id: 59, name: '–ß–∞—É—Ä–∞ –ê—Ä—Ç—ë–º', password: 'j3QbwyqOvio!x'},
  {id: 60, name: '–ß—É–º–∞–∫ –í–∞—Ä–≤–∞—Ä–∞', password: 'E7Pnw6X@4fBm3'},
  {id: 61, name: '–®–∞–π–∫–µ–≤–∏—á –ò–≤–∞–Ω', password: 'ztil*H!LDpio#'},
  {id: 62, name: '–®–≤–µ–¥–æ–≤ –ú–∏—Ö–∞–∏–ª', password: 'MM*kffT3v8nl4'},
  {id: 63, name: '–®–µ–≤—á–µ–Ω–∫–æ –ê—Ä—Ç—ë–º', password: '1pGiGNQ!iJuvL'},
  {id: 64, name: '–®–µ–≤—á–µ–Ω–∫–æ –†–æ–º–∞–Ω', password: 'O37s65Xt6Tidn'},
  {id: 65, name: '–®–ø–∞–Ω—å–∫–æ–≤–∞ –ê–Ω–Ω–∞', password: 'xYYn@RykxF7d0'},
  {id: 66, name: '–Ø–∫–æ–≤–µ–Ω–∫–æ –í–µ–Ω–∏–∞–º–∏–Ω', password: 'gX66yD@eT)CSF'},
  {id: 67, name: '–Ø–∫–æ–≤–µ–Ω–∫–æ –ú–∞—Ç—Ñ–µ–π', password: '6dPioYnviZnFH'},
];

export function App() {
  // const [selectUser, setSelectUser] = useState(users[0].name);
  const [winner, setWinner] = useState('');
  const [user, setUser] = useState('');
  const [password, setPassword] = useState('');
  const [access, setAccess] = useState(null);

  const accessCSS =
    access === true ? 'access-true' : access === false ? 'access-false' : '';

  function check(e) {
    e.preventDefault();
    // const userObj = users.find((el) => el.name === selectUser);
    const userObj = users.find((el) => el.name === user.trim());

    if (password === userObj?.password) {
      setAccess(true);
      setWinner(userObj.name);
    } else {
      setAccess(false);
    }

    setUser('');
    setPassword('');
  }

  return (
    <>
      <div className={`result-bg ${accessCSS}`}>
        <svg
          class="svg-sun"
          version="1.1"
          viewBox="0 0 100 100"
          preserveAspectRatio="xMinYMin meet"
        >
          <circle cx="50" cy="50" r="35" id="sun"></circle>
        </svg>
      </div>
      {(winner && (
        <h1>
          {winner},<br />
          –∫—É—à–∞–π ;)
        </h1>
      )) || (
        <h1>
          –¢–µ–ª–µ—Ñ–æ–Ω, <br /> –¥–∞–π –ø–æ–µ—Å—Ç—å
        </h1>
      )}

      <form onSubmit={check}>
        {/* <select
          onChange={(e) => {
            setSelectUser(e.target.value);
          }}
        >
          {users.map((user) => (
            <option key={user.id} value={user.name}>
              {user.name}
            </option>
          ))}
        </select> */}
        <input
          type="text"
          value={user}
          onInput={(e) => {
            setUser(e.target.value);
          }}
          placeholder="–í–≤–µ–¥–∏ –∏–º—è"
        />
        <input
          type="text"
          value={password}
          onInput={(e) => {
            setPassword(e.target.value);
          }}
          placeholder="–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å"
        />
        <input type="submit" value={access ? 'üòä' : 'ü•∫'} />
      </form>
    </>
  );
}
